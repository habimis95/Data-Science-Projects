# Spark Streaming
import findspark
findspark.init()

from pyspark import SparkContext
from pyspark.streaming import StreamingContext
from pyspark.sql import SQLContext
from pyspark.sql.functions import desc


import time
from IPython import display
import matplotlib.pyplot as plt
import seaborn as sns
# Only works for Jupyter Notebooks!
%matplotlib inline 


# Can only run this once. restart your kernel for any errors.
sc = SparkContext()

#___________________
#PCA
import findspark
findspark.init()

from pyspark.sql import SparkSession

from pyspark.ml.linalg import Vectors
from pyspark.ml.feature import VectorAssembler
from pyspark.ml.feature import StandardScaler
from pyspark.ml.feature import StringIndexer
from pyspark.ml.feature import PCA
from pyspark.ml.classification import LogisticRegression

spark = SparkSession.builder.appName('PCA_sonar').getOrCreate()
df = spark.read.csv('sonar_all_data.txt',inferSchema=True,header=False)


#____________
#GRAPHX
import findspark
findspark.init()

import pyspark
import os
from pyspark.sql import *

# Cai dat va thiet lap bien moi truong
SUBMIT_ARGS = "--packages graphframes:graphframes:0.7.0-spark2.4-s_2.11 pyspark-shell"
os.environ["PYSPARK_SUBMIT_ARGS"] = SUBMIT_ARGS

conf = pyspark.SparkConf()
sc = pyspark.SparkContext(conf=conf)
print(sc._conf.getAll())

from graphframes import *

spark = SparkSession(sc)

vertices = spark.createDataFrame([('1', 'Carter', 50), 
                                  ('2', 'May', 26),
                                 ('3', 'Mills', 80),
                                  ('4', 'Hood', 65),
                                  ('5', 'Banks', 93),
                                 ('98', 'Berg', 28),
                                 ('99', 'Page', 16)],
                                 ['id', 'name', 'age'])
edges = spark.createDataFrame([('1', '2', 'friend'),
                               ('1', '98', 'friend'), 
                               ('2', '1', 'friend'),
                              ('3', '1', 'friend'),
                              ('1', '3', 'friend'),
                               ('2', '3', 'follows'),
                               ('3', '4', 'friend'),
                               ('4', '3', 'friend'),
                               ('5', '3', 'friend'),
                               ('3', '5', 'friend'),
                               ('4', '5', 'follows'),
                              ('98', '99', 'friend'),
                              ('99', '98', 'friend')],
                              ['src', 'dst', 'type'])


